<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Susan&#39;s DS Blog</title>
    <link>https://susandsblog.netlify.com/</link>
    <description>Recent content on Susan&#39;s DS Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](http://gohugo.io).</copyright>
    <lastBuildDate>Fri, 27 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://susandsblog.netlify.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bar Plots</title>
      <link>https://susandsblog.netlify.com/post/bar-plots/</link>
      <pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://susandsblog.netlify.com/post/bar-plots/</guid>
      <description>library(Lahman)library(sqldf)library(ggplot2)A bar plot shows the different levels of attribute or factor. Let’s look at the team homeruns for all the major league teams in 1980.
query&amp;lt;-&amp;quot;SELECT name,HRFROM Teams WHERE yearID=1980ORDER BY HR&amp;quot;result&amp;lt;-sqldf(query)result$name&amp;lt;-factor(result$name,levels=result$name)Now we’ll visualize the data so we can see how the information is plotted out.
ggplot()+geom_bar(data=result,aes(x=name,y=HR),stat=&amp;#39;identity&amp;#39;)+coord_flip()+ggtitle(&amp;quot;1980 Major League Homeruns&amp;quot;)+xlab(&amp;quot;team names&amp;quot;)+ylab(&amp;quot;homeruns&amp;quot;)</description>
    </item>
    
    <item>
      <title>Histograms</title>
      <link>https://susandsblog.netlify.com/post/histograms/</link>
      <pubDate>Fri, 20 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://susandsblog.netlify.com/post/histograms/</guid>
      <description>Histograms look at a single set of data. Many people think of histograms as a bar graph- that deal quantitative data.
library(Lahman)library(sqldf)library(ggplot2)For an example we’ll create a histogram using all bodyweights of all baseball players.
query&amp;lt;-&amp;quot;SELECT weight FROM Master&amp;quot;result&amp;lt;-sqldf(query)Now that we’ve selected our data we’re going to make it into a histogram.
ggplot()+geom_histogram(data=result,aes(x=weight),color=&amp;quot;blue&amp;quot;,fill=&amp;quot;white&amp;quot;,bins=50)+ggtitle(&amp;quot;Baseball Player Bodyweights&amp;quot;)+xlab(&amp;quot;Weight of Player&amp;quot;)+ylab(&amp;quot;Number of Players&amp;quot;)## Warning: Removed 854 rows containing non-finite values (stat_bin).</description>
    </item>
    
    <item>
      <title>Scatterplots</title>
      <link>https://susandsblog.netlify.com/post/scatterplots/</link>
      <pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://susandsblog.netlify.com/post/scatterplots/</guid>
      <description>library(Lahman)library(sqldf)## Loading required package: gsubfn## Loading required package: proto## Loading required package: RSQLitelibrary(ggplot2)## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.4.2Welcome to my very first post regarding data science! Let’s start the ball rolling with a look at Scatterplots (which is two sets of data compared to each other):
query&amp;lt;-&amp;quot;SELECT sum(HR) as careerHR, sum(SO) as careerSO FROM Batting GROUP BY playerIDHAVING sum(HR)&amp;gt;400&amp;quot;result&amp;lt;-sqldf(query)So excited, in the line above we’re looking at the extracted data!</description>
    </item>
    
    <item>
      <title>Time Series</title>
      <link>https://susandsblog.netlify.com/post/time-series/</link>
      <pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://susandsblog.netlify.com/post/time-series/</guid>
      <description>library(Lahman)library(sqldf)## Loading required package: gsubfn## Loading required package: proto## Loading required package: RSQLitelibrary(ggplot2)## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.4.2Now we’ll plot a Time Series Chart (which is two sets of data compared to each other but one set of data is time):
query&amp;lt;-&amp;quot;SELECT HR,yearID FROM BattingWHERE playerID=&amp;#39;ruthba01&amp;#39;&amp;quot;result&amp;lt;-sqldf(query)ggplot()+geom_line(data=result,aes(x=yearID,y=HR))+ggtitle(&amp;quot;Babe Ruth&amp;#39;s Homeruns Over The Span of His Career&amp;quot;)+xlab(&amp;quot;Year&amp;quot;)+ylab(&amp;quot;Number of Homeruns&amp;quot;)</description>
    </item>
    
  </channel>
</rss>